---
- name: Retrieve external IP address
  uri:
    url: "{{ external_ip_url }}"
    return_content: yes
  register: external_ip_response

- name: Set external IP address fact
  set_fact:
    external_ip: "{{ external_ip_response.content | trim }}"

- name: Add Nimbus GPG key
  apt_key:
    url: "{{ nimbus_gpg_key_url }}"
    state: present

- name: Add the nimbus repository
  apt_repository:
    repo: "deb {{ nimbus_apt_repo_url }} all main"
    state: present
    filename: "nimbus"

- name: Gather facts about nimbus_beacon_node service
  service_facts:

- name: Install Nimbus components if nimbus_beacon_node service is not running
  apt:
    name:
      - nimbus-beacon-node
      - nimbus-validator-client
    state: latest
    update_cache: yes
  when: "'nimbus_beacon_node.service' not in ansible_facts.services or ansible_facts.services['nimbus_beacon_node.service'].state != 'running'"

- name: Create directory for nimbus_beacon_node override configuration
  file:
    path: /etc/systemd/system/nimbus_beacon_node.service.d
    state: directory
    mode: '0755'

- name: Set Environment variables for nimbus_beacon_node.service, enable it and run it
  template:
    src: nimbus_beacon_node.env.j2
    dest: /etc/systemd/system/nimbus_beacon_node.service.d/override.conf
    mode: '0644'
  when: "'nimbus_beacon_node.service' not in ansible_facts.services or ansible_facts.services['nimbus_beacon_node.service'].state != 'running'"

- name: Reload systemd daemon
  systemd:
    daemon_reload: true

- name: Enable nimbus_beacon_node service to start on boot
  systemd:
    name: nimbus_beacon_node
    enabled: yes

- name: Start nimbus_beacon_node service
  systemd:
    name: nimbus_beacon_node
    state: started


